name: Build

on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - 'docs/**'
      - '*.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'

env:
  # Indicates the CMake build directory where project files and binaries are being produced.
  CMAKE_BUILD_DIR: ${{ github.workspace }}/build/
  VGFX_SAMPLES: ON

jobs:
  windows:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Configure Win64
      run: cmake . -G "Visual Studio 17 2022" -A x64 -Bbuild_win_64 -DCMAKE_INSTALL_PREFIX="SDK"
    - name: Build Win64
      run: cmake --build build_win_64 --config MinSizeRel --target install
    - uses: actions/upload-artifact@v2
      with:
        name: 'Windows Sdk'
        path: ${{ github.workspace }}/SDK

    # Universal Windows Platform
    - name: Configure UWP ARM64
      run: cmake . -G "Visual Studio 17 2022" -A ARM64 -Bbuild_uwp_arm64 -DCMAKE_SYSTEM_NAME:String=WindowsStore -DCMAKE_SYSTEM_VERSION:String="10.0" -DCMAKE_INSTALL_PREFIX="SDK"
    - name: Build UWP ARM64
      run: cmake --build build_uwp_arm64 --config MinSizeRel --target install
    - uses: actions/upload-artifact@v2
      with:
        name: 'UWP ARM64 Sdk'
        path: ${{ github.workspace }}/SDK

  linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout    
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev

    - uses: lukka/get-cmake@latest

    # Run CMake to generate Ninja project files
    - name: Generate project files
      run: cmake -B "${{ env.CMAKE_BUILD_DIR }}" -S "." -GNinja -DCMAKE_INSTALL_PREFIX="SDK"

    # Build the whole project with Ninja (which is spawn by CMake).          
    - name: Build
      run: cmake --build "${{ env.CMAKE_BUILD_DIR }}" --target install --config Release

    - uses: actions/upload-artifact@v2
      with:
        name: 'Linux SDK'
        path: ${{ github.workspace }}/SDK      
